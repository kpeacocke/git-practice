version: '3'

tasks:
  test:
    desc: Run all Terratest cases
    cmds:
      - set -a; source .env; set +a; go test ./test/... -timeout 10m -v
    env:
      GITHUB_TOKEN: $GITHUB_TOKEN
  fmt:
    cmds:
      - terraform fmt -recursive
  validate:
    desc: Validate Terraform configuration
    cmds:
      - terraform validate -no-color
  tflint:
    desc: Run tflint linting (warnings allowed to continue)
    cmds:
      - tflint
  trivy:
    desc: Run Trivy security scanning (replaces tfsec)
    cmds:
      - sh -c "trivy fs --format json --output trivy-report.json . || true"
  trivy:terraform:
    desc: Run Trivy Terraform-specific security scan
    cmds:
      - trivy config --format table .
  trivy:secrets:
    desc: Scan for secrets and sensitive information
    cmds:
      - trivy fs --scanners secret --format table .
  trivy:vuln:
    desc: Scan for vulnerabilities in dependencies
    cmds:
      - trivy fs --scanners vuln --format table .
  trivy:all:
    desc: Run comprehensive Trivy security scan
    cmds:
      - trivy fs --format table .
      - trivy fs --format json --output trivy-report.json .
  trivy:sarif:
    desc: Generate SARIF report for GitHub Security tab
    cmds:
      - trivy fs --format sarif --output trivy-results.sarif .
  lint:
    desc: Run fmt, validate, trivy, and tflint (ensures security scan runs before lint failures)
    cmds:
      - task fmt
      - task validate
      - task trivy
      - task tflint
  husky:
    desc: Setup Git hooks for local dev
    cmds:
      - npx husky install
  docs:
    desc: Update README with terraform-docs
    cmds:
      - terraform-docs . --output-file README.md --output-mode inject
  docs:install:
    desc: Install documentation dependencies
    cmds:
      - ./scripts/docs.sh install
  docs:serve:
    desc: Serve documentation locally
    cmds:
      - ./scripts/docs.sh serve
  docs:build:
    desc: Build documentation
    cmds:
      - ./scripts/docs.sh build
  docs:update:
    desc: Update API documentation
    cmds:
      - ./scripts/docs.sh update
  docs:deploy:
    desc: Deploy documentation to GitHub Pages
    cmds:
      - ./scripts/docs.sh deploy
  # Dependabot Management Tasks
  deps:check:
    desc: Check for available dependency updates
    cmds:
      - ./scripts/dependabot.sh check-updates
  deps:validate:
    desc: Validate current dependencies
    cmds:
      - ./scripts/dependabot.sh validate-deps
  deps:test:
    desc: Run tests with current dependencies
    cmds:
      - ./scripts/dependabot.sh test-deps
  deps:security:
    desc: Run security scans on dependencies
    cmds:
      - ./scripts/dependabot.sh security-scan
  deps:update:terraform:
    desc: Update Terraform providers manually
    cmds:
      - ./scripts/dependabot.sh update-terraform
  deps:update:go:
    desc: Update Go dependencies
    cmds:
      - ./scripts/dependabot.sh update-go
  deps:simulate-pr:
    desc: Simulate Dependabot PR validation locally
    cmds:
      - ./scripts/dependabot.sh simulate-pr
  deps:all:
    desc: Run all dependency management tasks
    cmds:
      - task deps:check
      - task deps:validate
      - task deps:test
      - task deps:security
  # Release Management Tasks
  release:check:
    desc: Check if repository is ready for release
    cmds:
      - ./scripts/release.sh check
  release:prepare:
    desc: Prepare repository for release
    cmds:
      - ./scripts/release.sh prepare
  release:preview:
    desc: Preview the next release version
    cmds:
      - ./scripts/release.sh preview
  release:create:
    desc: Create a new release
    cmds:
      - ./scripts/release.sh release
  release:status:
    desc: Check release status
    cmds:
      - ./scripts/release.sh status
  release:registry:
    desc: Check Terraform Registry status
    cmds:
      - ./scripts/release.sh registry
  release:docs:
    desc: Update release documentation
    cmds:
      - ./scripts/release.sh docs
  release:all:
    desc: Full release workflow (check, prepare, create)
    cmds:
      - task release:check
      - task release:prepare
      - task release:create