{"format_version":"1.2","terraform_version":"1.12.2","variables":{"allow_auto_merge":{"value":true},"bootstrap_with_templates":{"value":true},"branch":{"value":"main"},"coverage_threshold":{"value":80},"disable_actions_until_provisioning":{"value":true},"enable_auto_labeling":{"value":false},"enable_ci":{"value":true},"enable_codeql":{"value":true},"enable_coverage":{"value":false},"enable_dependabot":{"value":true},"enable_dependabot_alerts":{"value":true},"enable_dependabot_autoapprove":{"value":true},"enable_dependabot_automerge_minor":{"value":true},"enable_dependabot_security_updates":{"value":true},"enable_matrix":{"value":false},"enable_release":{"value":true},"enable_secret_scanning":{"value":true},"enable_secret_scanning_push_protection":{"value":true},"enable_weekly_reporting":{"value":false},"enforce_branch_naming":{"value":false},"enforce_docs":{"value":false},"enforce_gitflow":{"value":true},"enforce_issue_integration":{"value":false},"enforce_project_board":{"value":false},"enforce_security":{"value":false},"enforce_semantic_pr_title":{"value":false},"enforce_tests":{"value":false},"github_project_url":{"value":""},"language_default_versions":{"value":{"go":"1.21","javascript":"20","python":"3.11","typescript":"20"}},"language_matrix_versions":{"value":{"go":["1.20","1.21","1.22"],"javascript":["16","18","20"],"python":["3.9","3.10","3.11"],"typescript":["4.5","4.6","4.7"]}},"languages":{"value":[]},"license":{"value":"MIT"},"name":{"value":"test"},"owners":{"value":["kpeacocke"]},"release_branches":{"value":["main"]},"require_codeql_workflow":{"value":true},"security_contact":{"value":"security@your-org.com"},"status_check_contexts":{"value":[]},"traceability_enabled":{"value":false},"visibility":{"value":"private"}},"planned_values":{"outputs":{"branch_protection_enforcement":{"sensitive":false,"type":["object",{"main":"bool"}],"value":{"main":true}},"branch_protection_patterns":{"sensitive":false,"type":["tuple",[["object",{"enforced":"bool","pattern":"string","protection_id":"string"}]]],"value":[{"enforced":true,"pattern":"main","protection_id":"BPR_kwDOO6-pks4D0KzV"}]},"branch_protection_rule_ids":{"sensitive":false,"type":["tuple",["string"]],"value":["BPR_kwDOO6-pks4D0KzV"]},"repository_full_name":{"sensitive":false},"repository_http_clone_url":{"sensitive":false,"type":"string","value":"https://github.com/kpeacocke/example-repo.git"},"repository_id":{"sensitive":false,"type":"string","value":"example-repo"},"repository_name":{"sensitive":false,"type":"string","value":"test"},"repository_node_id":{"sensitive":false,"type":"string","value":"R_kgDOO6-pkg"},"repository_ssh_clone_url":{"sensitive":false,"type":"string","value":"git@github.com:kpeacocke/example-repo.git"},"repository_url":{"sensitive":false,"type":"string","value":"https://github.com/kpeacocke/example-repo"},"workflow_file_shas":{"sensitive":false}},"root_module":{"resources":[{"address":"github_actions_repository_permissions.repo_perms","mode":"managed","type":"github_actions_repository_permissions","name":"repo_perms","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"allowed_actions":"local_only","allowed_actions_config":[],"enabled":true,"id":"example-repo","repository":"test"},"sensitive_values":{"allowed_actions_config":[]}},{"address":"github_branch_protection.release[0]","mode":"managed","type":"github_branch_protection","name":"release","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":2,"values":{"allows_deletions":false,"allows_force_pushes":false,"enforce_admins":true,"force_push_bypassers":[],"id":"BPR_kwDOO6-pks4D0KzV","lock_branch":false,"pattern":"main","repository_id":"R_kgDOO6-pkg","require_conversation_resolution":false,"require_signed_commits":false,"required_linear_history":false,"required_pull_request_reviews":[{"dismiss_stale_reviews":true,"dismissal_restrictions":[],"pull_request_bypassers":[],"require_code_owner_reviews":true,"require_last_push_approval":false,"required_approving_review_count":1,"restrict_dismissals":false}],"required_status_checks":[{"contexts":[],"strict":true}],"restrict_pushes":[]},"sensitive_values":{"force_push_bypassers":[],"required_pull_request_reviews":[{"dismissal_restrictions":[],"pull_request_bypassers":[]}],"required_status_checks":[{"contexts":[]}],"restrict_pushes":[]}},{"address":"github_repository.this","mode":"managed","type":"github_repository","name":"this","provider_name":"registry.terraform.io/integrations/github","schema_version":1,"values":{"allow_auto_merge":true,"allow_merge_commit":true,"allow_rebase_merge":true,"allow_squash_merge":true,"allow_update_branch":false,"archive_on_destroy":null,"archived":false,"auto_init":true,"default_branch":"main","delete_branch_on_merge":false,"description":"Managed by Terraform","etag":"W/\"942df88f3e54b43cc6f5be40d17aa405dfc9f781a506507dfbfc31ab7e5de838\"","git_clone_url":"git://github.com/kpeacocke/example-repo.git","gitignore_template":null,"has_discussions":false,"has_downloads":false,"has_issues":true,"has_projects":true,"has_wiki":false,"homepage_url":"","html_url":"https://github.com/kpeacocke/example-repo","http_clone_url":"https://github.com/kpeacocke/example-repo.git","id":"example-repo","ignore_vulnerability_alerts_during_read":null,"is_template":false,"license_template":null,"merge_commit_message":"PR_TITLE","merge_commit_title":"MERGE_MESSAGE","name":"test","node_id":"R_kgDOO6-pkg","pages":[],"primary_language":"JavaScript","private":true,"repo_id":1001367954,"security_and_analysis":[],"squash_merge_commit_message":"COMMIT_MESSAGES","squash_merge_commit_title":"COMMIT_OR_PR_TITLE","ssh_clone_url":"git@github.com:kpeacocke/example-repo.git","svn_url":"https://github.com/kpeacocke/example-repo","template":[],"topics":[],"visibility":"private","vulnerability_alerts":false,"web_commit_signoff_required":false},"sensitive_values":{"pages":[],"security_and_analysis":[],"template":[],"topics":[]}},{"address":"github_repository_file.build[0]","mode":"managed","type":"github_repository_file","name":"build","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add build workflow","content":"\nname: CI\n\n\non:\n  pull_request:\n    branches: [main]\n  push:\n    branches: [main]\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up Go\n        uses: actions/setup-go@v5\n        with:\n          go-version: '1.21'\n\n      - name: Run tests\n        run: |\n          set -e\n          go test -v ./test/...\n","file":".github/workflows/build.yml","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.changelog","mode":"managed","type":"github_repository_file","name":"changelog","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add CHANGELOG","content":"# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nSee [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) for conventions.\n","file":"CHANGELOG.md","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.ci_enforcement_workflow[0]","mode":"managed","type":"github_repository_file","name":"ci_enforcement_workflow","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add CI enforcement workflow","content":"\nname: CI Enforcement\n\n\non:\n  pull_request:\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n\n  ci-enforcement:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n\n\n\n\n\n","file":".github/workflows/ci-enforcement.yml","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.codeowners","mode":"managed","type":"github_repository_file","name":"codeowners","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add CODEOWNERS","content":"# Default owner for all files\n* {{ join(\" \", owners) }}\n\n# Optional: specific folder owners\n/modules/ {{ join(\" \", owners) }}\n/test/    {{ join(\" \", owners) }}\nkpeacocke","file":".github/CODEOWNERS","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.contributing","mode":"managed","type":"github_repository_file","name":"contributing","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add contributing guide","content":"# Contributing Guide\n\nThank you for considering contributing to this repository!\n\n## How to Contribute\n\n1. Fork the repo and create your branch from `main`.\n2. Ensure your changes pass CI and are linted.\n3. Reference an issue in your PR using `#\u003cissue-number\u003e`.\n4. If modifying workflows, test with dry-runs or forked repos.\n\n## Code of Conduct\n\nThis project follows a standard Contributor Covenant.\n","file":"CONTRIBUTING.md","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.editorconfig","mode":"managed","type":"github_repository_file","name":"editorconfig","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add editorconfig","content":"# .editorconfig\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\n","file":".editorconfig","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.gitignore","mode":"managed","type":"github_repository_file","name":"gitignore","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add .gitignore","content":"# OS\n.DS_Store\nThumbs.db\nehthumbs.db\n$RECYCLE.BIN/\n*.swp\n\n# Editors\n.vscode/\n.idea/\n*.sublime-workspace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","file":".gitignore","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.issue_template_bug","mode":"managed","type":"github_repository_file","name":"issue_template_bug","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add bug report issue template","content":"name: Bug Report\ndescription: Report a reproducible issue or regression\ntitle: \"[BUG] \"\nlabels: [\"bug\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for reporting a bug! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Bug Summary\n      description: A clear and concise description of the problem.\n      placeholder: The command fails with an error...\n    validations:\n      required: true\n  - type: textarea\n    id: steps\n    attributes:\n      label: Steps to Reproduce\n      description: How can we reproduce the bug?\n      placeholder: |\n        1. Run `terraform apply`\n        2. See error\n    validations:\n      required: true\n  - type: textarea\n    id: expected\n    attributes:\n      label: Expected Behavior\n      description: What did you expect to happen?\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other context or screenshots?\n","file":".github/ISSUE_TEMPLATE/bug_report.yml","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.issue_template_feature","mode":"managed","type":"github_repository_file","name":"issue_template_feature","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add feature request issue template","content":"name: Feature Request\ndescription: Propose a new feature or enhancement\ntitle: \"[FEATURE] \"\nlabels: [\"enhancement\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thank you for suggesting a feature! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Feature Summary\n      description: A clear and concise description of the proposed feature.\n      placeholder: Describes the feature you want\n    validations:\n      required: true\n  - type: textarea\n    id: motivation\n    attributes:\n      label: Motivation\n      description: Why is this feature important?\n  - type: textarea\n    id: details\n    attributes:\n      label: Proposed Solution\n      description: Provide details or examples for the feature.\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other information or screenshots?\n","file":".github/ISSUE_TEMPLATE/feature_request.yml","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.license","mode":"managed","type":"github_repository_file","name":"license","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add LICENSE (MIT)","content":"MIT License\n\nCopyright (c) 2025 Kristian Peacocke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy...\n","file":"LICENSE","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.nvmrc","mode":"managed","type":"github_repository_file","name":"nvmrc","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add Node.js version lock","content":"20\n","file":".nvmrc","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.pull_request_template","mode":"managed","type":"github_repository_file","name":"pull_request_template","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add PR template","content":"# Pull Request\n\n## Description\n\nPlease include a summary of the change and which issue is fixed. Also include relevant motivation and context.\n\nFixes # (issue)\n\n## Type of change\n\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n- [ ] Other (describe):\n\n## Checklist\n\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] I have made corresponding changes to the documentation\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] Any dependent changes have been merged and published in downstream modules\n\n## Screenshots (if applicable)\n\n## Additional context\n\nAdd any other context about the pull request here.\n","file":".github/PULL_REQUEST_TEMPLATE.md","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.readme","mode":"managed","type":"github_repository_file","name":"readme","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add README","content":"# {{ repo_name }}\n\n\u003e Managed via Terraform. Created for the [{{ owner }}](https://github.com/{{ owner }}) GitHub organization.\n\n## Badges\n\n{% if enable_ci %}\n![Build](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/build.yml/badge.svg)\n{% endif %}\n{% if enable_release %}\n![Release](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/release.yml/badge.svg)\n{% endif %}\n{% if enable_weekly_reporting %}\n![Scorecard](https://api.securityscorecards.dev/projects/github.com/{{ owner }}/{{ repo_name }}/badge)\n{% endif %}\n{% if enable_coverage %}\n![Coverage](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/test-python.yml/badge.svg)\n{% endif %}\n\n## Overview\n\nThis repository is bootstrapped with:\n- GitFlow branch protection {% if enforce_gitflow %}✅{% endif %}\n- Issue and test enforcement {% if enforce_issue_integration or enforce_tests %}✅{% endif %}\n- Semantic-release automation {% if enable_release %}✅{% endif %}\n- Weekly stale issue triage {% if enable_weekly_reporting %}✅{% endif %}\n- Security policy and CODEOWNERS {% if bootstrap_with_templates %}✅{% endif %}\n- Traceability checks {% if traceability_enabled %}✅{% endif %}\n- Semantic PR title enforcement {% if enforce_semantic_pr_title %}✅{% endif %}\n- Branch naming convention enforcement {% if enforce_branch_naming %}✅{% endif %}\n- GitHub Project board linking {% if enforce_project_board %}✅{% endif %}\n- Language-specific test coverage {% if enable_coverage %}✅{% endif %}\n- Dependabot security updates {% if enable_dependabot %}✅{% endif %}\n\n## Usage\n\nYou can use this repository as a baseline to enforce best practices across multiple teams.\n\n## Examples\n\nMinimal example usage (see `examples/minimal`):\n```hcl\nmodule \"{{ repo_name }}\" {\n  source      = \"github.com/{{ owner }}/{{ repo_name }}\"\n  name        = \"my-repo\"\n  owners      = [\"{{ owner }}\"]\n  visibility  = \"private\"\n  license     = \"{{ license }}\"\n  languages   = {{ languages }}\n  enable_ci   = true\n  # ... other options ...\n}\n```\n\n## License\n\nLicensed under the {{ license }} License.","file":"README.md","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.release[0]","mode":"managed","type":"github_repository_file","name":"release","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add release workflow","content":"\nname: Release\n\n\non:\n  push:\n    branches:\n      - main\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Use Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Semantic release\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: npx semantic-release\n","file":".github/workflows/release.yml","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.release_config","mode":"managed","type":"github_repository_file","name":"release_config","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add semantic-release config","content":"module.exports = {\n  branches: ['main'],\n  plugins: [\n    '@semantic-release/commit-analyzer',\n    '@semantic-release/release-notes-generator',\n    ['@semantic-release/changelog', {\n      changelogFile: 'CHANGELOG.md',\n    }],\n    ['@semantic-release/git', {\n      assets: ['CHANGELOG.md'],\n      message: 'chore(release): ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}',\n    }],\n    '@semantic-release/github'\n  ]\n}","file":"release.config.js","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"github_repository_file.security","mode":"managed","type":"github_repository_file","name":"security","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add SECURITY policy","content":"# Security Policy\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability, please report it by emailing **security@your-org.com** or opening a GitHub Security Advisory.\n\nWe take all disclosures seriously and will respond as quickly as possible.\n\n## Supported Versions\n\nWe currently support the latest released version of this module.\n\n| Version | Supported |\n|---------|-----------|\n| 1.x     | ✅         |\n| \u003c 1.0   | ❌         |\n\n## Security Features\n\nThis repository includes:\n- CodeQL scanning\n- Dependency scanning via Dependabot\n- Enforced CODEOWNERS for PR reviews\n- Traceability checks (issue → PR link, label, assignment)\n","file":"SECURITY.md","overwrite_on_create":true,"repository":"test"},"sensitive_values":{}},{"address":"null_resource.files_created","mode":"managed","type":"null_resource","name":"files_created","provider_name":"registry.terraform.io/hashicorp/null","schema_version":0,"values":{"id":"476324762175125738","triggers":null},"sensitive_values":{}}]}},"resource_changes":[{"address":"github_actions_repository_permissions.repo_perms","mode":"managed","type":"github_actions_repository_permissions","name":"repo_perms","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["update"],"before":{"allowed_actions":"all","allowed_actions_config":[],"enabled":true,"id":"example-repo","repository":"example-repo"},"after":{"allowed_actions":"local_only","allowed_actions_config":[],"enabled":true,"id":"example-repo","repository":"test"},"after_unknown":{},"before_sensitive":{"allowed_actions_config":[]},"after_sensitive":{"allowed_actions_config":[]}}},{"address":"github_branch_protection.release[0]","mode":"managed","type":"github_branch_protection","name":"release","index":0,"provider_name":"registry.terraform.io/integrations/github","change":{"actions":["no-op"],"before":{"allows_deletions":false,"allows_force_pushes":false,"enforce_admins":true,"force_push_bypassers":[],"id":"BPR_kwDOO6-pks4D0KzV","lock_branch":false,"pattern":"main","repository_id":"R_kgDOO6-pkg","require_conversation_resolution":false,"require_signed_commits":false,"required_linear_history":false,"required_pull_request_reviews":[{"dismiss_stale_reviews":true,"dismissal_restrictions":[],"pull_request_bypassers":[],"require_code_owner_reviews":true,"require_last_push_approval":false,"required_approving_review_count":1,"restrict_dismissals":false}],"required_status_checks":[{"contexts":[],"strict":true}],"restrict_pushes":[]},"after":{"allows_deletions":false,"allows_force_pushes":false,"enforce_admins":true,"force_push_bypassers":[],"id":"BPR_kwDOO6-pks4D0KzV","lock_branch":false,"pattern":"main","repository_id":"R_kgDOO6-pkg","require_conversation_resolution":false,"require_signed_commits":false,"required_linear_history":false,"required_pull_request_reviews":[{"dismiss_stale_reviews":true,"dismissal_restrictions":[],"pull_request_bypassers":[],"require_code_owner_reviews":true,"require_last_push_approval":false,"required_approving_review_count":1,"restrict_dismissals":false}],"required_status_checks":[{"contexts":[],"strict":true}],"restrict_pushes":[]},"after_unknown":{},"before_sensitive":{"force_push_bypassers":[],"required_pull_request_reviews":[{"dismissal_restrictions":[],"pull_request_bypassers":[]}],"required_status_checks":[{"contexts":[]}],"restrict_pushes":[]},"after_sensitive":{"force_push_bypassers":[],"required_pull_request_reviews":[{"dismissal_restrictions":[],"pull_request_bypassers":[]}],"required_status_checks":[{"contexts":[]}],"restrict_pushes":[]}}},{"address":"github_repository.this","mode":"managed","type":"github_repository","name":"this","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["update"],"before":{"allow_auto_merge":true,"allow_merge_commit":true,"allow_rebase_merge":true,"allow_squash_merge":true,"allow_update_branch":false,"archive_on_destroy":null,"archived":false,"auto_init":true,"default_branch":"main","delete_branch_on_merge":false,"description":"Managed by Terraform","etag":"W/\"942df88f3e54b43cc6f5be40d17aa405dfc9f781a506507dfbfc31ab7e5de838\"","full_name":"kpeacocke/example-repo","git_clone_url":"git://github.com/kpeacocke/example-repo.git","gitignore_template":null,"has_discussions":false,"has_downloads":false,"has_issues":true,"has_projects":true,"has_wiki":false,"homepage_url":"","html_url":"https://github.com/kpeacocke/example-repo","http_clone_url":"https://github.com/kpeacocke/example-repo.git","id":"example-repo","ignore_vulnerability_alerts_during_read":null,"is_template":false,"license_template":null,"merge_commit_message":"PR_TITLE","merge_commit_title":"MERGE_MESSAGE","name":"example-repo","node_id":"R_kgDOO6-pkg","pages":[],"primary_language":"JavaScript","private":true,"repo_id":1001367954,"security_and_analysis":[],"squash_merge_commit_message":"COMMIT_MESSAGES","squash_merge_commit_title":"COMMIT_OR_PR_TITLE","ssh_clone_url":"git@github.com:kpeacocke/example-repo.git","svn_url":"https://github.com/kpeacocke/example-repo","template":[],"topics":[],"visibility":"private","vulnerability_alerts":false,"web_commit_signoff_required":false},"after":{"allow_auto_merge":true,"allow_merge_commit":true,"allow_rebase_merge":true,"allow_squash_merge":true,"allow_update_branch":false,"archive_on_destroy":null,"archived":false,"auto_init":true,"default_branch":"main","delete_branch_on_merge":false,"description":"Managed by Terraform","etag":"W/\"942df88f3e54b43cc6f5be40d17aa405dfc9f781a506507dfbfc31ab7e5de838\"","git_clone_url":"git://github.com/kpeacocke/example-repo.git","gitignore_template":null,"has_discussions":false,"has_downloads":false,"has_issues":true,"has_projects":true,"has_wiki":false,"homepage_url":"","html_url":"https://github.com/kpeacocke/example-repo","http_clone_url":"https://github.com/kpeacocke/example-repo.git","id":"example-repo","ignore_vulnerability_alerts_during_read":null,"is_template":false,"license_template":null,"merge_commit_message":"PR_TITLE","merge_commit_title":"MERGE_MESSAGE","name":"test","node_id":"R_kgDOO6-pkg","pages":[],"primary_language":"JavaScript","private":true,"repo_id":1001367954,"security_and_analysis":[],"squash_merge_commit_message":"COMMIT_MESSAGES","squash_merge_commit_title":"COMMIT_OR_PR_TITLE","ssh_clone_url":"git@github.com:kpeacocke/example-repo.git","svn_url":"https://github.com/kpeacocke/example-repo","template":[],"topics":[],"visibility":"private","vulnerability_alerts":false,"web_commit_signoff_required":false},"after_unknown":{"full_name":true,"pages":[],"security_and_analysis":[],"template":[],"topics":[]},"before_sensitive":{"pages":[],"security_and_analysis":[],"template":[],"topics":[]},"after_sensitive":{"pages":[],"security_and_analysis":[],"template":[],"topics":[]}}},{"address":"github_repository_file.auto_approve_dependabot[0]","mode":"managed","type":"github_repository_file","name":"auto_approve_dependabot","index":0,"provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add auto-approve and auto-merge for Dependabot PRs","commit_sha":"a4dfb1394c1f1d9bb32dabbd56d52fada19c9c7a","content":"\nname: Auto-Approve and Auto-Merge Dependabot PRs\n\n\non:\n  pull_request:\n    types: [opened, synchronize]\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  auto-approve:\n    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Auto-approve Dependabot PR\n        uses: hmarr/auto-approve-action@v4\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n\n  auto-merge:\n    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Enable auto-merge for Dependabot PR\n        run: |\n          gh pr merge --auto --merge ${{ github.event.pull_request.number }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n","file":".github/workflows/auto-approve-dependabot.yml","id":"example-repo/.github/workflows/auto-approve-dependabot.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"caf69ad4406d19293e7e1eb1b8cc845ad253ec85"},"after":null,"after_unknown":{},"before_sensitive":{},"after_sensitive":false},"action_reason":"delete_because_count_index"},{"address":"github_repository_file.build[0]","mode":"managed","type":"github_repository_file","name":"build","index":0,"provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add build workflow","commit_sha":"f3165f9e045341af510975c736f839fe51598055","content":"\nname: CI\n\n\non:\n  pull_request:\n    branches: [main]\n  push:\n    branches: [main]\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up Go\n        uses: actions/setup-go@v5\n        with:\n          go-version: '1.21'\n\n      - name: Run tests\n        run: |\n          set -e\n          go test -v ./test/...\n","file":".github/workflows/build.yml","id":"example-repo/.github/workflows/build.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"d504d876c697d7de58ab60185a2d4fc5ac141cdd"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add build workflow","content":"\nname: CI\n\n\non:\n  pull_request:\n    branches: [main]\n  push:\n    branches: [main]\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up Go\n        uses: actions/setup-go@v5\n        with:\n          go-version: '1.21'\n\n      - name: Run tests\n        run: |\n          set -e\n          go test -v ./test/...\n","file":".github/workflows/build.yml","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.changelog","mode":"managed","type":"github_repository_file","name":"changelog","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add CHANGELOG","commit_sha":"a4df34d7e34aaa11c47192eddd83bd4f7f891b72","content":"# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nSee [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) for conventions.\n","file":"CHANGELOG.md","id":"example-repo/CHANGELOG.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"94328cc099ef27f388ec0ba90660bea45ee69136"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add CHANGELOG","content":"# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nSee [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) for conventions.\n","file":"CHANGELOG.md","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.ci_enforcement_workflow[0]","mode":"managed","type":"github_repository_file","name":"ci_enforcement_workflow","index":0,"provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add CI enforcement workflow","commit_sha":"b3583204b88637ad70bc1b79892cd20f360b38ff","content":"\nname: CI Enforcement\n\n\non:\n  pull_request:\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n\n  ci-enforcement:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n\n      - name: Check issue integration\n        uses: actions/github-script@v6\n        with:\n          github-token: \"${{ secrets.GITHUB_TOKEN }}\"\n          script: |\n            const pr = context.payload.pull_request;\n            if (!/#\\d+/.test(pr.body)) {\n              core.setFailed(\"PR must reference an issue.\");\n            }\n\n\n\n      - name: Check docs changes\n        run: |\n          if [ -z \"$(git diff --name-only $$${{ github.event.pull_request.base.sha }} $$${{ github.sha }} | grep '\\.md$')\" ]; then\n            echo 'No documentation changes detected.'; exit 1\n          fi\n\n\n\n      - name: Check test changes\n        run: |\n          if [ -z \"$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep 'test/\\\\|\\\\.spec\\\\.\\\\|_test\\\\.')\" ]; then\n            echo 'No test changes detected.'; exit 1\n          fi\n\n","file":".github/workflows/ci-enforcement.yml","id":"example-repo/.github/workflows/ci-enforcement.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"4d8be9bb52f4c59b1ec903a2a0c2669f9b78e823"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add CI enforcement workflow","content":"\nname: CI Enforcement\n\n\non:\n  pull_request:\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n\n  ci-enforcement:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n\n\n\n\n\n","file":".github/workflows/ci-enforcement.yml","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.codeowners","mode":"managed","type":"github_repository_file","name":"codeowners","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add CODEOWNERS","commit_sha":"878071a1866a36ec8a332561c57316c5abd66383","content":"# Default owner for all files\n* {{ join(\" \", owners) }}\n\n# Optional: specific folder owners\n/modules/ {{ join(\" \", owners) }}\n/test/    {{ join(\" \", owners) }}\nkpeacocke","file":".github/CODEOWNERS","id":"example-repo/.github/CODEOWNERS","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"1c821cb287a373903257e9a12b62bc12f4e8b817"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add CODEOWNERS","content":"# Default owner for all files\n* {{ join(\" \", owners) }}\n\n# Optional: specific folder owners\n/modules/ {{ join(\" \", owners) }}\n/test/    {{ join(\" \", owners) }}\nkpeacocke","file":".github/CODEOWNERS","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.contributing","mode":"managed","type":"github_repository_file","name":"contributing","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add contributing guide","commit_sha":"71816a66757ca0db8ac442c24a1d89ed4cbfe180","content":"# Contributing Guide\n\nThank you for considering contributing to this repository!\n\n## How to Contribute\n\n1. Fork the repo and create your branch from `main`.\n2. Ensure your changes pass CI and are linted.\n3. Reference an issue in your PR using `#\u003cissue-number\u003e`.\n4. If modifying workflows, test with dry-runs or forked repos.\n\n## Code of Conduct\n\nThis project follows a standard Contributor Covenant.\n","file":"CONTRIBUTING.md","id":"example-repo/CONTRIBUTING.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"55fafedcf529b8bf2ce8de82cc126cde6011a53f"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add contributing guide","content":"# Contributing Guide\n\nThank you for considering contributing to this repository!\n\n## How to Contribute\n\n1. Fork the repo and create your branch from `main`.\n2. Ensure your changes pass CI and are linted.\n3. Reference an issue in your PR using `#\u003cissue-number\u003e`.\n4. If modifying workflows, test with dry-runs or forked repos.\n\n## Code of Conduct\n\nThis project follows a standard Contributor Covenant.\n","file":"CONTRIBUTING.md","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.dependabot[0]","mode":"managed","type":"github_repository_file","name":"dependabot","index":0,"provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add Dependabot config","commit_sha":"5da5307891ad998c3caad1a42a264ce2ff252bb9","content":"version: 2\nupdates:\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    {% if enable_automerge_minor %}\n    automerge: true\n    automerge-type: \"minor\"\n    {% endif %}\n  - package-ecosystem: \"npm\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    {% if enable_automerge_minor %}\n    automerge: true\n    automerge-type: \"minor\"\n    {% endif %}\n\nnotifications:\n  email:\n    enabled: false","file":".github/dependabot.yml","id":"example-repo/.github/dependabot.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"80e8bcd26c6a2934112e646ed7c685bd5a4e0d58"},"after":null,"after_unknown":{},"before_sensitive":{},"after_sensitive":false},"action_reason":"delete_because_count_index"},{"address":"github_repository_file.editorconfig","mode":"managed","type":"github_repository_file","name":"editorconfig","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add editorconfig","commit_sha":"53a1858657eb297e779c8c03e8ca4bf058c7ca99","content":"# .editorconfig\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\n","file":".editorconfig","id":"example-repo/.editorconfig","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"6329d1e0136f54e6ce56c6cf74cda8a98ab85808"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add editorconfig","content":"# .editorconfig\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\n","file":".editorconfig","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.gitignore","mode":"managed","type":"github_repository_file","name":"gitignore","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add .gitignore","commit_sha":"a35ace162068e9aaceafd58b74ea61cbcc3302be","content":"# OS\n.DS_Store\nThumbs.db\nehthumbs.db\n$RECYCLE.BIN/\n*.swp\n\n# Editors\n.vscode/\n.idea/\n*.sublime-workspace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","file":".gitignore","id":"example-repo/.gitignore","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"e9d840b1f91e4c475d9784c779787868cfba1afb"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add .gitignore","content":"# OS\n.DS_Store\nThumbs.db\nehthumbs.db\n$RECYCLE.BIN/\n*.swp\n\n# Editors\n.vscode/\n.idea/\n*.sublime-workspace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","file":".gitignore","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.issue_template_bug","mode":"managed","type":"github_repository_file","name":"issue_template_bug","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add bug report issue template","commit_sha":"c36e71b37cce03bafd5acb9b5da98a9acaab30c7","content":"name: Bug Report\ndescription: Report a reproducible issue or regression\ntitle: \"[BUG] \"\nlabels: [\"bug\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for reporting a bug! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Bug Summary\n      description: A clear and concise description of the problem.\n      placeholder: The command fails with an error...\n    validations:\n      required: true\n  - type: textarea\n    id: steps\n    attributes:\n      label: Steps to Reproduce\n      description: How can we reproduce the bug?\n      placeholder: |\n        1. Run `terraform apply`\n        2. See error\n    validations:\n      required: true\n  - type: textarea\n    id: expected\n    attributes:\n      label: Expected Behavior\n      description: What did you expect to happen?\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other context or screenshots?\n","file":".github/ISSUE_TEMPLATE/bug_report.yml","id":"example-repo/.github/ISSUE_TEMPLATE/bug_report.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"60aa3a6b1ed6df100ca1adb37590c39ee0de6de3"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add bug report issue template","content":"name: Bug Report\ndescription: Report a reproducible issue or regression\ntitle: \"[BUG] \"\nlabels: [\"bug\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for reporting a bug! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Bug Summary\n      description: A clear and concise description of the problem.\n      placeholder: The command fails with an error...\n    validations:\n      required: true\n  - type: textarea\n    id: steps\n    attributes:\n      label: Steps to Reproduce\n      description: How can we reproduce the bug?\n      placeholder: |\n        1. Run `terraform apply`\n        2. See error\n    validations:\n      required: true\n  - type: textarea\n    id: expected\n    attributes:\n      label: Expected Behavior\n      description: What did you expect to happen?\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other context or screenshots?\n","file":".github/ISSUE_TEMPLATE/bug_report.yml","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.issue_template_feature","mode":"managed","type":"github_repository_file","name":"issue_template_feature","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add feature request issue template","commit_sha":"55214e1e094b809621972b75536d3da60f821ebb","content":"name: Feature Request\ndescription: Propose a new feature or enhancement\ntitle: \"[FEATURE] \"\nlabels: [\"enhancement\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thank you for suggesting a feature! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Feature Summary\n      description: A clear and concise description of the proposed feature.\n      placeholder: Describes the feature you want\n    validations:\n      required: true\n  - type: textarea\n    id: motivation\n    attributes:\n      label: Motivation\n      description: Why is this feature important?\n  - type: textarea\n    id: details\n    attributes:\n      label: Proposed Solution\n      description: Provide details or examples for the feature.\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other information or screenshots?\n","file":".github/ISSUE_TEMPLATE/feature_request.yml","id":"example-repo/.github/ISSUE_TEMPLATE/feature_request.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"c9335625ea3d2d89550513a6a2293f683cc1ba16"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add feature request issue template","content":"name: Feature Request\ndescription: Propose a new feature or enhancement\ntitle: \"[FEATURE] \"\nlabels: [\"enhancement\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thank you for suggesting a feature! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Feature Summary\n      description: A clear and concise description of the proposed feature.\n      placeholder: Describes the feature you want\n    validations:\n      required: true\n  - type: textarea\n    id: motivation\n    attributes:\n      label: Motivation\n      description: Why is this feature important?\n  - type: textarea\n    id: details\n    attributes:\n      label: Proposed Solution\n      description: Provide details or examples for the feature.\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other information or screenshots?\n","file":".github/ISSUE_TEMPLATE/feature_request.yml","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.license","mode":"managed","type":"github_repository_file","name":"license","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add LICENSE (MIT)","commit_sha":"56f3df1478af100a1a2c309b71a11cfb44dff598","content":"MIT License\n\nCopyright (c) 2025 Kristian Peacocke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy...\n","file":"LICENSE","id":"example-repo/LICENSE","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"58831bb0dce3283619c8dc5075b960a7e0d0a40f"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add LICENSE (MIT)","content":"MIT License\n\nCopyright (c) 2025 Kristian Peacocke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy...\n","file":"LICENSE","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.nvmrc","mode":"managed","type":"github_repository_file","name":"nvmrc","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add Node.js version lock","commit_sha":"23662952d044ae6683ffdbd56b2b1fb4115706ba","content":"20\n","file":".nvmrc","id":"example-repo/.nvmrc","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"209e3ef4b6247ce746048d5711befda46206d235"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add Node.js version lock","content":"20\n","file":".nvmrc","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.pull_request_template","mode":"managed","type":"github_repository_file","name":"pull_request_template","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add PR template","commit_sha":"731526692ae6e7023b9c2368f28efddbd4d95084","content":"# Pull Request\n\n## Description\n\nPlease include a summary of the change and which issue is fixed. Also include relevant motivation and context.\n\nFixes # (issue)\n\n## Type of change\n\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n- [ ] Other (describe):\n\n## Checklist\n\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] I have made corresponding changes to the documentation\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] Any dependent changes have been merged and published in downstream modules\n\n## Screenshots (if applicable)\n\n## Additional context\n\nAdd any other context about the pull request here.\n","file":".github/PULL_REQUEST_TEMPLATE.md","id":"example-repo/.github/PULL_REQUEST_TEMPLATE.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"5f56d407d91cceed604d6a4c33190727339bd483"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add PR template","content":"# Pull Request\n\n## Description\n\nPlease include a summary of the change and which issue is fixed. Also include relevant motivation and context.\n\nFixes # (issue)\n\n## Type of change\n\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n- [ ] Other (describe):\n\n## Checklist\n\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] I have made corresponding changes to the documentation\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] Any dependent changes have been merged and published in downstream modules\n\n## Screenshots (if applicable)\n\n## Additional context\n\nAdd any other context about the pull request here.\n","file":".github/PULL_REQUEST_TEMPLATE.md","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.readme","mode":"managed","type":"github_repository_file","name":"readme","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add README","commit_sha":"7aea210ce24cb852ff464f0c09492eec021ef888","content":"# {{ repo_name }}\n\n\u003e Managed via Terraform. Created for the [{{ owner }}](https://github.com/{{ owner }}) GitHub organization.\n\n## Badges\n\n{% if enable_ci %}\n![Build](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/build.yml/badge.svg)\n{% endif %}\n{% if enable_release %}\n![Release](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/release.yml/badge.svg)\n{% endif %}\n{% if enable_weekly_reporting %}\n![Scorecard](https://api.securityscorecards.dev/projects/github.com/{{ owner }}/{{ repo_name }}/badge)\n{% endif %}\n{% if enable_coverage %}\n![Coverage](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/test-python.yml/badge.svg)\n{% endif %}\n\n## Overview\n\nThis repository is bootstrapped with:\n- GitFlow branch protection {% if enforce_gitflow %}✅{% endif %}\n- Issue and test enforcement {% if enforce_issue_integration or enforce_tests %}✅{% endif %}\n- Semantic-release automation {% if enable_release %}✅{% endif %}\n- Weekly stale issue triage {% if enable_weekly_reporting %}✅{% endif %}\n- Security policy and CODEOWNERS {% if bootstrap_with_templates %}✅{% endif %}\n- Traceability checks {% if traceability_enabled %}✅{% endif %}\n- Semantic PR title enforcement {% if enforce_semantic_pr_title %}✅{% endif %}\n- Branch naming convention enforcement {% if enforce_branch_naming %}✅{% endif %}\n- GitHub Project board linking {% if enforce_project_board %}✅{% endif %}\n- Language-specific test coverage {% if enable_coverage %}✅{% endif %}\n- Dependabot security updates {% if enable_dependabot %}✅{% endif %}\n\n## Usage\n\nYou can use this repository as a baseline to enforce best practices across multiple teams.\n\n## Examples\n\nMinimal example usage (see `examples/minimal`):\n```hcl\nmodule \"{{ repo_name }}\" {\n  source      = \"github.com/{{ owner }}/{{ repo_name }}\"\n  name        = \"my-repo\"\n  owners      = [\"{{ owner }}\"]\n  visibility  = \"private\"\n  license     = \"{{ license }}\"\n  languages   = {{ languages }}\n  enable_ci   = true\n  # ... other options ...\n}\n```\n\n## License\n\nLicensed under the {{ license }} License.","file":"README.md","id":"example-repo/README.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"4c52ffb768d8fc4b5ea6368ec7d3b86014237d5c"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add README","content":"# {{ repo_name }}\n\n\u003e Managed via Terraform. Created for the [{{ owner }}](https://github.com/{{ owner }}) GitHub organization.\n\n## Badges\n\n{% if enable_ci %}\n![Build](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/build.yml/badge.svg)\n{% endif %}\n{% if enable_release %}\n![Release](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/release.yml/badge.svg)\n{% endif %}\n{% if enable_weekly_reporting %}\n![Scorecard](https://api.securityscorecards.dev/projects/github.com/{{ owner }}/{{ repo_name }}/badge)\n{% endif %}\n{% if enable_coverage %}\n![Coverage](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/test-python.yml/badge.svg)\n{% endif %}\n\n## Overview\n\nThis repository is bootstrapped with:\n- GitFlow branch protection {% if enforce_gitflow %}✅{% endif %}\n- Issue and test enforcement {% if enforce_issue_integration or enforce_tests %}✅{% endif %}\n- Semantic-release automation {% if enable_release %}✅{% endif %}\n- Weekly stale issue triage {% if enable_weekly_reporting %}✅{% endif %}\n- Security policy and CODEOWNERS {% if bootstrap_with_templates %}✅{% endif %}\n- Traceability checks {% if traceability_enabled %}✅{% endif %}\n- Semantic PR title enforcement {% if enforce_semantic_pr_title %}✅{% endif %}\n- Branch naming convention enforcement {% if enforce_branch_naming %}✅{% endif %}\n- GitHub Project board linking {% if enforce_project_board %}✅{% endif %}\n- Language-specific test coverage {% if enable_coverage %}✅{% endif %}\n- Dependabot security updates {% if enable_dependabot %}✅{% endif %}\n\n## Usage\n\nYou can use this repository as a baseline to enforce best practices across multiple teams.\n\n## Examples\n\nMinimal example usage (see `examples/minimal`):\n```hcl\nmodule \"{{ repo_name }}\" {\n  source      = \"github.com/{{ owner }}/{{ repo_name }}\"\n  name        = \"my-repo\"\n  owners      = [\"{{ owner }}\"]\n  visibility  = \"private\"\n  license     = \"{{ license }}\"\n  languages   = {{ languages }}\n  enable_ci   = true\n  # ... other options ...\n}\n```\n\n## License\n\nLicensed under the {{ license }} License.","file":"README.md","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.release[0]","mode":"managed","type":"github_repository_file","name":"release","index":0,"provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add release workflow","commit_sha":"acff84a62e35dc0e96f8ac1265cb00d07d774cfa","content":"\nname: Release\n\n\non:\n  push:\n    branches:\n      - main\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Use Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Semantic release\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: npx semantic-release\n","file":".github/workflows/release.yml","id":"example-repo/.github/workflows/release.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"f362d636f55d6868f774e731cdb12dab47307488"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add release workflow","content":"\nname: Release\n\n\non:\n  push:\n    branches:\n      - main\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Use Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Semantic release\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: npx semantic-release\n","file":".github/workflows/release.yml","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.release_config","mode":"managed","type":"github_repository_file","name":"release_config","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add semantic-release config","commit_sha":"94a682f06f4c217ca73c3bc3a93d74d871ff6a06","content":"module.exports = {\n  branches: ['main'],\n  plugins: [\n    '@semantic-release/commit-analyzer',\n    '@semantic-release/release-notes-generator',\n    ['@semantic-release/changelog', {\n      changelogFile: 'CHANGELOG.md',\n    }],\n    ['@semantic-release/git', {\n      assets: ['CHANGELOG.md'],\n      message: 'chore(release): ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}',\n    }],\n    '@semantic-release/github'\n  ]\n}","file":"release.config.js","id":"example-repo/release.config.js","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"3ea451c04dd84b28816655e6a72fe2192584cf13"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add semantic-release config","content":"module.exports = {\n  branches: ['main'],\n  plugins: [\n    '@semantic-release/commit-analyzer',\n    '@semantic-release/release-notes-generator',\n    ['@semantic-release/changelog', {\n      changelogFile: 'CHANGELOG.md',\n    }],\n    ['@semantic-release/git', {\n      assets: ['CHANGELOG.md'],\n      message: 'chore(release): ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}',\n    }],\n    '@semantic-release/github'\n  ]\n}","file":"release.config.js","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"github_repository_file.security","mode":"managed","type":"github_repository_file","name":"security","provider_name":"registry.terraform.io/integrations/github","change":{"actions":["delete","create"],"before":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add SECURITY policy","commit_sha":"04770dd8b33b4e871a71864d6b35d756795af136","content":"# Security Policy\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability, please report it by emailing **security@your-org.com** or opening a GitHub Security Advisory.\n\nWe take all disclosures seriously and will respond as quickly as possible.\n\n## Supported Versions\n\nWe currently support the latest released version of this module.\n\n| Version | Supported |\n|---------|-----------|\n| 1.x     | ✅         |\n| \u003c 1.0   | ❌         |\n\n## Security Features\n\nThis repository includes:\n- CodeQL scanning\n- Dependency scanning via Dependabot\n- Enforced CODEOWNERS for PR reviews\n- Traceability checks (issue → PR link, label, assignment)\n","file":"SECURITY.md","id":"example-repo/SECURITY.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"d23fbbdb80eb27205f617450c28cda6ca2fff97f"},"after":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add SECURITY policy","content":"# Security Policy\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability, please report it by emailing **security@your-org.com** or opening a GitHub Security Advisory.\n\nWe take all disclosures seriously and will respond as quickly as possible.\n\n## Supported Versions\n\nWe currently support the latest released version of this module.\n\n| Version | Supported |\n|---------|-----------|\n| 1.x     | ✅         |\n| \u003c 1.0   | ❌         |\n\n## Security Features\n\nThis repository includes:\n- CodeQL scanning\n- Dependency scanning via Dependabot\n- Enforced CODEOWNERS for PR reviews\n- Traceability checks (issue → PR link, label, assignment)\n","file":"SECURITY.md","overwrite_on_create":true,"repository":"test"},"after_unknown":{"autocreate_branch_source_sha":true,"commit_sha":true,"id":true,"ref":true,"sha":true},"before_sensitive":{},"after_sensitive":{},"replace_paths":[["repository"]]},"action_reason":"replace_because_cannot_update"},{"address":"null_resource.files_created","mode":"managed","type":"null_resource","name":"files_created","provider_name":"registry.terraform.io/hashicorp/null","change":{"actions":["no-op"],"before":{"id":"476324762175125738","triggers":null},"after":{"id":"476324762175125738","triggers":null},"after_unknown":{},"before_sensitive":{},"after_sensitive":{}}}],"output_changes":{"branch_protection_enforcement":{"actions":["no-op"],"before":{"main":true},"after":{"main":true},"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"branch_protection_patterns":{"actions":["no-op"],"before":[{"enforced":true,"pattern":"main","protection_id":"BPR_kwDOO6-pks4D0KzV"}],"after":[{"enforced":true,"pattern":"main","protection_id":"BPR_kwDOO6-pks4D0KzV"}],"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"branch_protection_rule_ids":{"actions":["no-op"],"before":["BPR_kwDOO6-pks4D0KzV"],"after":["BPR_kwDOO6-pks4D0KzV"],"after_unknown":false,"before_sensitive":false,"after_sensitive":false},"repository_full_name":{"actions":["update"],"before":"kpeacocke/example-repo","after_unknown":true,"before_sensitive":false,"after_sensitive":false},"repository_http_clone_url":{"actions":["no-op"],"before":"https://github.com/kpeacocke/example-repo.git","after":"https://github.com/kpeacocke/example-repo.git","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"repository_id":{"actions":["no-op"],"before":"example-repo","after":"example-repo","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"repository_name":{"actions":["update"],"before":"example-repo","after":"test","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"repository_node_id":{"actions":["no-op"],"before":"R_kgDOO6-pkg","after":"R_kgDOO6-pkg","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"repository_ssh_clone_url":{"actions":["no-op"],"before":"git@github.com:kpeacocke/example-repo.git","after":"git@github.com:kpeacocke/example-repo.git","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"repository_url":{"actions":["no-op"],"before":"https://github.com/kpeacocke/example-repo","after":"https://github.com/kpeacocke/example-repo","after_unknown":false,"before_sensitive":false,"after_sensitive":false},"workflow_file_shas":{"actions":["update"],"before":{".github/dependabot.yml":"80e8bcd26c6a2934112e646ed7c685bd5a4e0d58",".github/workflows/auto-approve-dependabot.yml":"caf69ad4406d19293e7e1eb1b8cc845ad253ec85",".github/workflows/build.yml":"d504d876c697d7de58ab60185a2d4fc5ac141cdd",".github/workflows/ci-enforcement.yml":"4d8be9bb52f4c59b1ec903a2a0c2669f9b78e823",".github/workflows/release.yml":"f362d636f55d6868f774e731cdb12dab47307488"},"after":{},"after_unknown":{".github/workflows/build.yml":true,".github/workflows/ci-enforcement.yml":true,".github/workflows/release.yml":true},"before_sensitive":false,"after_sensitive":false}},"prior_state":{"format_version":"1.0","terraform_version":"1.12.2","values":{"outputs":{"branch_protection_enforcement":{"sensitive":false,"value":{"main":true},"type":["object",{"main":"bool"}]},"branch_protection_patterns":{"sensitive":false,"value":[{"enforced":true,"pattern":"main","protection_id":"BPR_kwDOO6-pks4D0KzV"}],"type":["tuple",[["object",{"enforced":"bool","pattern":"string","protection_id":"string"}]]]},"branch_protection_rule_ids":{"sensitive":false,"value":["BPR_kwDOO6-pks4D0KzV"],"type":["tuple",["string"]]},"repository_full_name":{"sensitive":false,"value":"kpeacocke/example-repo","type":"string"},"repository_http_clone_url":{"sensitive":false,"value":"https://github.com/kpeacocke/example-repo.git","type":"string"},"repository_id":{"sensitive":false,"value":"example-repo","type":"string"},"repository_name":{"sensitive":false,"value":"test","type":"string"},"repository_node_id":{"sensitive":false,"value":"R_kgDOO6-pkg","type":"string"},"repository_ssh_clone_url":{"sensitive":false,"value":"git@github.com:kpeacocke/example-repo.git","type":"string"},"repository_url":{"sensitive":false,"value":"https://github.com/kpeacocke/example-repo","type":"string"},"workflow_file_shas":{"sensitive":false,"value":{".github/dependabot.yml":"80e8bcd26c6a2934112e646ed7c685bd5a4e0d58",".github/workflows/auto-approve-dependabot.yml":"caf69ad4406d19293e7e1eb1b8cc845ad253ec85",".github/workflows/build.yml":"d504d876c697d7de58ab60185a2d4fc5ac141cdd",".github/workflows/ci-enforcement.yml":"4d8be9bb52f4c59b1ec903a2a0c2669f9b78e823",".github/workflows/release.yml":"f362d636f55d6868f774e731cdb12dab47307488"},"type":["object",{".github/dependabot.yml":"string",".github/workflows/auto-approve-dependabot.yml":"string",".github/workflows/build.yml":"string",".github/workflows/ci-enforcement.yml":"string",".github/workflows/release.yml":"string"}]}},"root_module":{"resources":[{"address":"github_actions_repository_permissions.repo_perms","mode":"managed","type":"github_actions_repository_permissions","name":"repo_perms","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"allowed_actions":"all","allowed_actions_config":[],"enabled":true,"id":"example-repo","repository":"example-repo"},"sensitive_values":{"allowed_actions_config":[]},"depends_on":["github_repository.this"]},{"address":"github_branch_protection.release[0]","mode":"managed","type":"github_branch_protection","name":"release","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":2,"values":{"allows_deletions":false,"allows_force_pushes":false,"enforce_admins":true,"force_push_bypassers":[],"id":"BPR_kwDOO6-pks4D0KzV","lock_branch":false,"pattern":"main","repository_id":"R_kgDOO6-pkg","require_conversation_resolution":false,"require_signed_commits":false,"required_linear_history":false,"required_pull_request_reviews":[{"dismiss_stale_reviews":true,"dismissal_restrictions":[],"pull_request_bypassers":[],"require_code_owner_reviews":true,"require_last_push_approval":false,"required_approving_review_count":1,"restrict_dismissals":false}],"required_status_checks":[{"contexts":[],"strict":true}],"restrict_pushes":[]},"sensitive_values":{"force_push_bypassers":[],"required_pull_request_reviews":[{"dismissal_restrictions":[],"pull_request_bypassers":[]}],"required_status_checks":[{"contexts":[]}],"restrict_pushes":[]},"depends_on":["github_repository.this","github_repository_file.auto_approve_dependabot","github_repository_file.build","github_repository_file.changelog","github_repository_file.ci_enforcement_workflow","github_repository_file.codeowners","github_repository_file.codeql_workflow","github_repository_file.contributing","github_repository_file.dependabot","github_repository_file.editorconfig","github_repository_file.gitignore","github_repository_file.issue_template_bug","github_repository_file.issue_template_feature","github_repository_file.license","github_repository_file.nvmrc","github_repository_file.pull_request_template","github_repository_file.readme","github_repository_file.release","github_repository_file.release_config","github_repository_file.scorecard","github_repository_file.security","github_repository_file.stale","github_repository_file.traceability","null_resource.files_created"]},{"address":"github_repository.this","mode":"managed","type":"github_repository","name":"this","provider_name":"registry.terraform.io/integrations/github","schema_version":1,"values":{"allow_auto_merge":true,"allow_merge_commit":true,"allow_rebase_merge":true,"allow_squash_merge":true,"allow_update_branch":false,"archive_on_destroy":null,"archived":false,"auto_init":true,"default_branch":"main","delete_branch_on_merge":false,"description":"Managed by Terraform","etag":"W/\"942df88f3e54b43cc6f5be40d17aa405dfc9f781a506507dfbfc31ab7e5de838\"","full_name":"kpeacocke/example-repo","git_clone_url":"git://github.com/kpeacocke/example-repo.git","gitignore_template":null,"has_discussions":false,"has_downloads":false,"has_issues":true,"has_projects":true,"has_wiki":false,"homepage_url":"","html_url":"https://github.com/kpeacocke/example-repo","http_clone_url":"https://github.com/kpeacocke/example-repo.git","id":"example-repo","ignore_vulnerability_alerts_during_read":null,"is_template":false,"license_template":null,"merge_commit_message":"PR_TITLE","merge_commit_title":"MERGE_MESSAGE","name":"example-repo","node_id":"R_kgDOO6-pkg","pages":[],"primary_language":"JavaScript","private":true,"repo_id":1001367954,"security_and_analysis":[],"squash_merge_commit_message":"COMMIT_MESSAGES","squash_merge_commit_title":"COMMIT_OR_PR_TITLE","ssh_clone_url":"git@github.com:kpeacocke/example-repo.git","svn_url":"https://github.com/kpeacocke/example-repo","template":[],"topics":[],"visibility":"private","vulnerability_alerts":false,"web_commit_signoff_required":false},"sensitive_values":{"pages":[],"security_and_analysis":[],"template":[],"topics":[]}},{"address":"github_repository_file.auto_approve_dependabot[0]","mode":"managed","type":"github_repository_file","name":"auto_approve_dependabot","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add auto-approve and auto-merge for Dependabot PRs","commit_sha":"a4dfb1394c1f1d9bb32dabbd56d52fada19c9c7a","content":"\nname: Auto-Approve and Auto-Merge Dependabot PRs\n\n\non:\n  pull_request:\n    types: [opened, synchronize]\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  auto-approve:\n    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Auto-approve Dependabot PR\n        uses: hmarr/auto-approve-action@v4\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n\n  auto-merge:\n    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Enable auto-merge for Dependabot PR\n        run: |\n          gh pr merge --auto --merge ${{ github.event.pull_request.number }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n","file":".github/workflows/auto-approve-dependabot.yml","id":"example-repo/.github/workflows/auto-approve-dependabot.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"caf69ad4406d19293e7e1eb1b8cc845ad253ec85"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.build[0]","mode":"managed","type":"github_repository_file","name":"build","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add build workflow","commit_sha":"f3165f9e045341af510975c736f839fe51598055","content":"\nname: CI\n\n\non:\n  pull_request:\n    branches: [main]\n  push:\n    branches: [main]\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Set up Go\n        uses: actions/setup-go@v5\n        with:\n          go-version: '1.21'\n\n      - name: Run tests\n        run: |\n          set -e\n          go test -v ./test/...\n","file":".github/workflows/build.yml","id":"example-repo/.github/workflows/build.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"d504d876c697d7de58ab60185a2d4fc5ac141cdd"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.changelog","mode":"managed","type":"github_repository_file","name":"changelog","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add CHANGELOG","commit_sha":"a4df34d7e34aaa11c47192eddd83bd4f7f891b72","content":"# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nSee [Keep a Changelog](https://keepachangelog.com/en/1.0.0/) for conventions.\n","file":"CHANGELOG.md","id":"example-repo/CHANGELOG.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"94328cc099ef27f388ec0ba90660bea45ee69136"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.ci_enforcement_workflow[0]","mode":"managed","type":"github_repository_file","name":"ci_enforcement_workflow","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add CI enforcement workflow","commit_sha":"b3583204b88637ad70bc1b79892cd20f360b38ff","content":"\nname: CI Enforcement\n\n\non:\n  pull_request:\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n\n  ci-enforcement:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n\n\n      - name: Check issue integration\n        uses: actions/github-script@v6\n        with:\n          github-token: \"${{ secrets.GITHUB_TOKEN }}\"\n          script: |\n            const pr = context.payload.pull_request;\n            if (!/#\\d+/.test(pr.body)) {\n              core.setFailed(\"PR must reference an issue.\");\n            }\n\n\n\n      - name: Check docs changes\n        run: |\n          if [ -z \"$(git diff --name-only $$${{ github.event.pull_request.base.sha }} $$${{ github.sha }} | grep '\\.md$')\" ]; then\n            echo 'No documentation changes detected.'; exit 1\n          fi\n\n\n\n      - name: Check test changes\n        run: |\n          if [ -z \"$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep 'test/\\\\|\\\\.spec\\\\.\\\\|_test\\\\.')\" ]; then\n            echo 'No test changes detected.'; exit 1\n          fi\n\n","file":".github/workflows/ci-enforcement.yml","id":"example-repo/.github/workflows/ci-enforcement.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"4d8be9bb52f4c59b1ec903a2a0c2669f9b78e823"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.codeowners","mode":"managed","type":"github_repository_file","name":"codeowners","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add CODEOWNERS","commit_sha":"878071a1866a36ec8a332561c57316c5abd66383","content":"# Default owner for all files\n* {{ join(\" \", owners) }}\n\n# Optional: specific folder owners\n/modules/ {{ join(\" \", owners) }}\n/test/    {{ join(\" \", owners) }}\nkpeacocke","file":".github/CODEOWNERS","id":"example-repo/.github/CODEOWNERS","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"1c821cb287a373903257e9a12b62bc12f4e8b817"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.contributing","mode":"managed","type":"github_repository_file","name":"contributing","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add contributing guide","commit_sha":"71816a66757ca0db8ac442c24a1d89ed4cbfe180","content":"# Contributing Guide\n\nThank you for considering contributing to this repository!\n\n## How to Contribute\n\n1. Fork the repo and create your branch from `main`.\n2. Ensure your changes pass CI and are linted.\n3. Reference an issue in your PR using `#\u003cissue-number\u003e`.\n4. If modifying workflows, test with dry-runs or forked repos.\n\n## Code of Conduct\n\nThis project follows a standard Contributor Covenant.\n","file":"CONTRIBUTING.md","id":"example-repo/CONTRIBUTING.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"55fafedcf529b8bf2ce8de82cc126cde6011a53f"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.dependabot[0]","mode":"managed","type":"github_repository_file","name":"dependabot","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add Dependabot config","commit_sha":"5da5307891ad998c3caad1a42a264ce2ff252bb9","content":"version: 2\nupdates:\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    {% if enable_automerge_minor %}\n    automerge: true\n    automerge-type: \"minor\"\n    {% endif %}\n  - package-ecosystem: \"npm\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    {% if enable_automerge_minor %}\n    automerge: true\n    automerge-type: \"minor\"\n    {% endif %}\n\nnotifications:\n  email:\n    enabled: false","file":".github/dependabot.yml","id":"example-repo/.github/dependabot.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"80e8bcd26c6a2934112e646ed7c685bd5a4e0d58"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.editorconfig","mode":"managed","type":"github_repository_file","name":"editorconfig","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add editorconfig","commit_sha":"53a1858657eb297e779c8c03e8ca4bf058c7ca99","content":"# .editorconfig\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\n","file":".editorconfig","id":"example-repo/.editorconfig","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"6329d1e0136f54e6ce56c6cf74cda8a98ab85808"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.gitignore","mode":"managed","type":"github_repository_file","name":"gitignore","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add .gitignore","commit_sha":"a35ace162068e9aaceafd58b74ea61cbcc3302be","content":"# OS\n.DS_Store\nThumbs.db\nehthumbs.db\n$RECYCLE.BIN/\n*.swp\n\n# Editors\n.vscode/\n.idea/\n*.sublime-workspace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","file":".gitignore","id":"example-repo/.gitignore","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"e9d840b1f91e4c475d9784c779787868cfba1afb"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.issue_template_bug","mode":"managed","type":"github_repository_file","name":"issue_template_bug","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add bug report issue template","commit_sha":"c36e71b37cce03bafd5acb9b5da98a9acaab30c7","content":"name: Bug Report\ndescription: Report a reproducible issue or regression\ntitle: \"[BUG] \"\nlabels: [\"bug\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for reporting a bug! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Bug Summary\n      description: A clear and concise description of the problem.\n      placeholder: The command fails with an error...\n    validations:\n      required: true\n  - type: textarea\n    id: steps\n    attributes:\n      label: Steps to Reproduce\n      description: How can we reproduce the bug?\n      placeholder: |\n        1. Run `terraform apply`\n        2. See error\n    validations:\n      required: true\n  - type: textarea\n    id: expected\n    attributes:\n      label: Expected Behavior\n      description: What did you expect to happen?\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other context or screenshots?\n","file":".github/ISSUE_TEMPLATE/bug_report.yml","id":"example-repo/.github/ISSUE_TEMPLATE/bug_report.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"60aa3a6b1ed6df100ca1adb37590c39ee0de6de3"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.issue_template_feature","mode":"managed","type":"github_repository_file","name":"issue_template_feature","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add feature request issue template","commit_sha":"55214e1e094b809621972b75536d3da60f821ebb","content":"name: Feature Request\ndescription: Propose a new feature or enhancement\ntitle: \"[FEATURE] \"\nlabels: [\"enhancement\"]\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thank you for suggesting a feature! Please complete the form below.\n  - type: input\n    id: summary\n    attributes:\n      label: Feature Summary\n      description: A clear and concise description of the proposed feature.\n      placeholder: Describes the feature you want\n    validations:\n      required: true\n  - type: textarea\n    id: motivation\n    attributes:\n      label: Motivation\n      description: Why is this feature important?\n  - type: textarea\n    id: details\n    attributes:\n      label: Proposed Solution\n      description: Provide details or examples for the feature.\n  - type: textarea\n    id: context\n    attributes:\n      label: Additional Context\n      description: Any other information or screenshots?\n","file":".github/ISSUE_TEMPLATE/feature_request.yml","id":"example-repo/.github/ISSUE_TEMPLATE/feature_request.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"c9335625ea3d2d89550513a6a2293f683cc1ba16"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.license","mode":"managed","type":"github_repository_file","name":"license","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add LICENSE (MIT)","commit_sha":"56f3df1478af100a1a2c309b71a11cfb44dff598","content":"MIT License\n\nCopyright (c) 2025 Kristian Peacocke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy...\n","file":"LICENSE","id":"example-repo/LICENSE","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"58831bb0dce3283619c8dc5075b960a7e0d0a40f"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.nvmrc","mode":"managed","type":"github_repository_file","name":"nvmrc","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add Node.js version lock","commit_sha":"23662952d044ae6683ffdbd56b2b1fb4115706ba","content":"20\n","file":".nvmrc","id":"example-repo/.nvmrc","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"209e3ef4b6247ce746048d5711befda46206d235"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.pull_request_template","mode":"managed","type":"github_repository_file","name":"pull_request_template","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add PR template","commit_sha":"731526692ae6e7023b9c2368f28efddbd4d95084","content":"# Pull Request\n\n## Description\n\nPlease include a summary of the change and which issue is fixed. Also include relevant motivation and context.\n\nFixes # (issue)\n\n## Type of change\n\n- [ ] Bug fix\n- [ ] New feature\n- [ ] Breaking change\n- [ ] Documentation update\n- [ ] Other (describe):\n\n## Checklist\n\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my code\n- [ ] I have commented my code, particularly in hard-to-understand areas\n- [ ] I have made corresponding changes to the documentation\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] Any dependent changes have been merged and published in downstream modules\n\n## Screenshots (if applicable)\n\n## Additional context\n\nAdd any other context about the pull request here.\n","file":".github/PULL_REQUEST_TEMPLATE.md","id":"example-repo/.github/PULL_REQUEST_TEMPLATE.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"5f56d407d91cceed604d6a4c33190727339bd483"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.readme","mode":"managed","type":"github_repository_file","name":"readme","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add README","commit_sha":"7aea210ce24cb852ff464f0c09492eec021ef888","content":"# {{ repo_name }}\n\n\u003e Managed via Terraform. Created for the [{{ owner }}](https://github.com/{{ owner }}) GitHub organization.\n\n## Badges\n\n{% if enable_ci %}\n![Build](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/build.yml/badge.svg)\n{% endif %}\n{% if enable_release %}\n![Release](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/release.yml/badge.svg)\n{% endif %}\n{% if enable_weekly_reporting %}\n![Scorecard](https://api.securityscorecards.dev/projects/github.com/{{ owner }}/{{ repo_name }}/badge)\n{% endif %}\n{% if enable_coverage %}\n![Coverage](https://github.com/{{ owner }}/{{ repo_name }}/actions/workflows/test-python.yml/badge.svg)\n{% endif %}\n\n## Overview\n\nThis repository is bootstrapped with:\n- GitFlow branch protection {% if enforce_gitflow %}✅{% endif %}\n- Issue and test enforcement {% if enforce_issue_integration or enforce_tests %}✅{% endif %}\n- Semantic-release automation {% if enable_release %}✅{% endif %}\n- Weekly stale issue triage {% if enable_weekly_reporting %}✅{% endif %}\n- Security policy and CODEOWNERS {% if bootstrap_with_templates %}✅{% endif %}\n- Traceability checks {% if traceability_enabled %}✅{% endif %}\n- Semantic PR title enforcement {% if enforce_semantic_pr_title %}✅{% endif %}\n- Branch naming convention enforcement {% if enforce_branch_naming %}✅{% endif %}\n- GitHub Project board linking {% if enforce_project_board %}✅{% endif %}\n- Language-specific test coverage {% if enable_coverage %}✅{% endif %}\n- Dependabot security updates {% if enable_dependabot %}✅{% endif %}\n\n## Usage\n\nYou can use this repository as a baseline to enforce best practices across multiple teams.\n\n## Examples\n\nMinimal example usage (see `examples/minimal`):\n```hcl\nmodule \"{{ repo_name }}\" {\n  source      = \"github.com/{{ owner }}/{{ repo_name }}\"\n  name        = \"my-repo\"\n  owners      = [\"{{ owner }}\"]\n  visibility  = \"private\"\n  license     = \"{{ license }}\"\n  languages   = {{ languages }}\n  enable_ci   = true\n  # ... other options ...\n}\n```\n\n## License\n\nLicensed under the {{ license }} License.","file":"README.md","id":"example-repo/README.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"4c52ffb768d8fc4b5ea6368ec7d3b86014237d5c"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.release[0]","mode":"managed","type":"github_repository_file","name":"release","index":0,"provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"ci: add release workflow","commit_sha":"acff84a62e35dc0e96f8ac1265cb00d07d774cfa","content":"\nname: Release\n\n\non:\n  push:\n    branches:\n      - main\n\nnotifications:\n  email:\n    enabled: false\n\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v4\n\n      - name: Use Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Semantic release\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: npx semantic-release\n","file":".github/workflows/release.yml","id":"example-repo/.github/workflows/release.yml","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"f362d636f55d6868f774e731cdb12dab47307488"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.release_config","mode":"managed","type":"github_repository_file","name":"release_config","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"chore: add semantic-release config","commit_sha":"94a682f06f4c217ca73c3bc3a93d74d871ff6a06","content":"module.exports = {\n  branches: ['main'],\n  plugins: [\n    '@semantic-release/commit-analyzer',\n    '@semantic-release/release-notes-generator',\n    ['@semantic-release/changelog', {\n      changelogFile: 'CHANGELOG.md',\n    }],\n    ['@semantic-release/git', {\n      assets: ['CHANGELOG.md'],\n      message: 'chore(release): ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}',\n    }],\n    '@semantic-release/github'\n  ]\n}","file":"release.config.js","id":"example-repo/release.config.js","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"3ea451c04dd84b28816655e6a72fe2192584cf13"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"github_repository_file.security","mode":"managed","type":"github_repository_file","name":"security","provider_name":"registry.terraform.io/integrations/github","schema_version":0,"values":{"autocreate_branch":null,"autocreate_branch_source_branch":null,"autocreate_branch_source_sha":null,"branch":"main","commit_author":null,"commit_email":null,"commit_message":"docs: add SECURITY policy","commit_sha":"04770dd8b33b4e871a71864d6b35d756795af136","content":"# Security Policy\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability, please report it by emailing **security@your-org.com** or opening a GitHub Security Advisory.\n\nWe take all disclosures seriously and will respond as quickly as possible.\n\n## Supported Versions\n\nWe currently support the latest released version of this module.\n\n| Version | Supported |\n|---------|-----------|\n| 1.x     | ✅         |\n| \u003c 1.0   | ❌         |\n\n## Security Features\n\nThis repository includes:\n- CodeQL scanning\n- Dependency scanning via Dependabot\n- Enforced CODEOWNERS for PR reviews\n- Traceability checks (issue → PR link, label, assignment)\n","file":"SECURITY.md","id":"example-repo/SECURITY.md","overwrite_on_create":true,"ref":"main","repository":"example-repo","sha":"d23fbbdb80eb27205f617450c28cda6ca2fff97f"},"sensitive_values":{},"depends_on":["github_repository.this"]},{"address":"null_resource.files_created","mode":"managed","type":"null_resource","name":"files_created","provider_name":"registry.terraform.io/hashicorp/null","schema_version":0,"values":{"id":"476324762175125738","triggers":null},"sensitive_values":{},"depends_on":["github_repository.this","github_repository_file.auto_approve_dependabot","github_repository_file.build","github_repository_file.changelog","github_repository_file.ci_enforcement_workflow","github_repository_file.codeowners","github_repository_file.codeql_workflow","github_repository_file.contributing","github_repository_file.dependabot","github_repository_file.editorconfig","github_repository_file.gitignore","github_repository_file.issue_template_bug","github_repository_file.issue_template_feature","github_repository_file.license","github_repository_file.nvmrc","github_repository_file.pull_request_template","github_repository_file.readme","github_repository_file.release","github_repository_file.release_config","github_repository_file.scorecard","github_repository_file.security","github_repository_file.stale","github_repository_file.traceability"]}]}}},"configuration":{"provider_config":{"github":{"name":"github","full_name":"registry.terraform.io/integrations/github","version_constraint":"~\u003e 6.6"},"null":{"name":"null","full_name":"registry.terraform.io/hashicorp/null","version_constraint":"~\u003e 3.2"}},"root_module":{"outputs":{"branch_protection_enforcement":{"expression":{"references":["github_branch_protection.release"]},"description":"Map of branch patterns to admin enforcement status."},"branch_protection_patterns":{"expression":{"references":["var.release_branches","var.release_branches","github_branch_protection.release","github_branch_protection.release"]},"description":"List of protected branch patterns and their status."},"branch_protection_rule_ids":{"expression":{"references":["github_branch_protection.release"]},"description":"List of branch protection rule resource IDs for each release branch."},"repository_full_name":{"expression":{"references":["github_repository.this.full_name","github_repository.this"]},"description":"The full name (e.g., owner/repo) of the GitHub repository."},"repository_http_clone_url":{"expression":{"references":["github_repository.this.http_clone_url","github_repository.this"]},"description":"The HTTP(S) clone URL of the GitHub repository."},"repository_id":{"expression":{"references":["github_repository.this.id","github_repository.this"]},"description":"The GitHub repository ID."},"repository_name":{"expression":{"references":["github_repository.this.name","github_repository.this"]},"description":"The name of the created GitHub repository."},"repository_node_id":{"expression":{"references":["github_repository.this.node_id","github_repository.this"]},"description":"The GraphQL node ID of the GitHub repository."},"repository_ssh_clone_url":{"expression":{"references":["github_repository.this.ssh_clone_url","github_repository.this"]},"description":"The SSH URL of the GitHub repository."},"repository_url":{"expression":{"references":["github_repository.this.html_url","github_repository.this"]},"description":"The HTTPS URL of the GitHub repository."},"workflow_file_shas":{"expression":{"references":["local.workflow_resources"]},"description":"Map of workflow file paths to commit SHAs."}},"resources":[{"address":"github_actions_repository_permissions.repo_perms","mode":"managed","type":"github_actions_repository_permissions","name":"repo_perms","provider_config_key":"github","expressions":{"allowed_actions":{"references":["var.disable_actions_until_provisioning"]},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_branch_protection.release","mode":"managed","type":"github_branch_protection","name":"release","provider_config_key":"github","expressions":{"enforce_admins":{"constant_value":true},"pattern":{"references":["var.release_branches","count.index"]},"repository_id":{"references":["github_repository.this.node_id","github_repository.this"]},"required_pull_request_reviews":[{"dismiss_stale_reviews":{"constant_value":true},"require_code_owner_reviews":{"constant_value":true},"required_approving_review_count":{"constant_value":1}}],"required_status_checks":[{"contexts":{"references":["var.status_check_contexts"]},"strict":{"constant_value":true}}]},"schema_version":2,"count_expression":{"references":["var.enforce_gitflow","var.release_branches"]},"depends_on":["null_resource.files_created"]},{"address":"github_repository.this","mode":"managed","type":"github_repository","name":"this","provider_config_key":"github","expressions":{"allow_auto_merge":{"references":["var.allow_auto_merge"]},"auto_init":{"constant_value":true},"description":{"constant_value":"Managed by Terraform"},"has_issues":{"constant_value":true},"has_projects":{"constant_value":true},"has_wiki":{"constant_value":false},"name":{"references":["var.name"]},"visibility":{"references":["var.visibility"]}},"schema_version":1},{"address":"github_repository_file.auto_approve_dependabot","mode":"managed","type":"github_repository_file","name":"auto_approve_dependabot","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"ci: add auto-approve and auto-merge for Dependabot PRs"},"content":{"references":["path.module"]},"file":{"constant_value":".github/workflows/auto-approve-dependabot.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.disable_actions_until_provisioning","var.enable_dependabot","var.enable_dependabot_autoapprove"]}},{"address":"github_repository_file.build","mode":"managed","type":"github_repository_file","name":"build","provider_config_key":"github","expressions":{"branch":{"constant_value":"main"},"commit_message":{"constant_value":"ci: add build workflow"},"content":{"references":["path.module"]},"file":{"constant_value":".github/workflows/build.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.enable_ci"]}},{"address":"github_repository_file.changelog","mode":"managed","type":"github_repository_file","name":"changelog","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"docs: add CHANGELOG"},"content":{"references":["path.module"]},"file":{"constant_value":"CHANGELOG.md"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.ci_enforcement_workflow","mode":"managed","type":"github_repository_file","name":"ci_enforcement_workflow","provider_config_key":"github","expressions":{"branch":{"constant_value":"main"},"commit_message":{"constant_value":"ci: add CI enforcement workflow"},"content":{"references":["path.module","var.enforce_issue_integration","var.enforce_docs","var.enforce_tests"]},"file":{"constant_value":".github/workflows/ci-enforcement.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.enable_ci"]}},{"address":"github_repository_file.codeowners","mode":"managed","type":"github_repository_file","name":"codeowners","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"chore: add CODEOWNERS"},"content":{"references":["path.module","var.owners","var.owners"]},"file":{"constant_value":".github/CODEOWNERS"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.codeql_workflow","mode":"managed","type":"github_repository_file","name":"codeql_workflow","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"ci: add CodeQL workflow"},"content":{"references":["path.module","var.languages"]},"file":{"constant_value":".github/workflows/codeql.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.disable_actions_until_provisioning","var.enable_codeql","var.languages"]}},{"address":"github_repository_file.contributing","mode":"managed","type":"github_repository_file","name":"contributing","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"docs: add contributing guide"},"content":{"references":["path.module"]},"file":{"constant_value":"CONTRIBUTING.md"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.dependabot","mode":"managed","type":"github_repository_file","name":"dependabot","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"chore: add Dependabot config"},"content":{"references":["path.module","var.enable_dependabot_automerge_minor"]},"file":{"constant_value":".github/dependabot.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.disable_actions_until_provisioning","var.enable_dependabot"]}},{"address":"github_repository_file.editorconfig","mode":"managed","type":"github_repository_file","name":"editorconfig","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"chore: add editorconfig"},"content":{"references":["path.module"]},"file":{"constant_value":".editorconfig"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.gitignore","mode":"managed","type":"github_repository_file","name":"gitignore","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"chore: add .gitignore"},"content":{"references":["path.module","var.languages"]},"file":{"constant_value":".gitignore"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.issue_template_bug","mode":"managed","type":"github_repository_file","name":"issue_template_bug","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"docs: add bug report issue template"},"content":{"references":["path.module"]},"file":{"constant_value":".github/ISSUE_TEMPLATE/bug_report.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.issue_template_feature","mode":"managed","type":"github_repository_file","name":"issue_template_feature","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"docs: add feature request issue template"},"content":{"references":["path.module"]},"file":{"constant_value":".github/ISSUE_TEMPLATE/feature_request.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.license","mode":"managed","type":"github_repository_file","name":"license","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"references":["var.license"]},"content":{"references":["path.module","var.license"]},"file":{"constant_value":"LICENSE"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.nvmrc","mode":"managed","type":"github_repository_file","name":"nvmrc","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"chore: add Node.js version lock"},"content":{"references":["path.module"]},"file":{"constant_value":".nvmrc"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.pull_request_template","mode":"managed","type":"github_repository_file","name":"pull_request_template","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"docs: add PR template"},"content":{"references":["path.module"]},"file":{"constant_value":".github/PULL_REQUEST_TEMPLATE.md"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.readme","mode":"managed","type":"github_repository_file","name":"readme","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"docs: add README"},"content":{"references":["path.module","github_repository.this.name","github_repository.this","var.owners[0]","var.owners","var.license","var.languages"]},"file":{"constant_value":"README.md"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.release","mode":"managed","type":"github_repository_file","name":"release","provider_config_key":"github","expressions":{"branch":{"constant_value":"main"},"commit_message":{"constant_value":"ci: add release workflow"},"content":{"references":["path.module"]},"file":{"constant_value":".github/workflows/release.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.enable_release"]}},{"address":"github_repository_file.release_config","mode":"managed","type":"github_repository_file","name":"release_config","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"chore: add semantic-release config"},"content":{"references":["path.module"]},"file":{"constant_value":"release.config.js"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.scorecard","mode":"managed","type":"github_repository_file","name":"scorecard","provider_config_key":"github","expressions":{"branch":{"constant_value":"main"},"commit_message":{"constant_value":"chore: add scorecard workflow"},"content":{"references":["path.module"]},"file":{"constant_value":".github/scorecard.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.enable_weekly_reporting"]}},{"address":"github_repository_file.security","mode":"managed","type":"github_repository_file","name":"security","provider_config_key":"github","expressions":{"branch":{"references":["var.branch"]},"commit_message":{"constant_value":"docs: add SECURITY policy"},"content":{"references":["path.module","var.security_contact","var.owners[0]","var.owners","github_repository.this.name","github_repository.this"]},"file":{"constant_value":"SECURITY.md"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0},{"address":"github_repository_file.stale","mode":"managed","type":"github_repository_file","name":"stale","provider_config_key":"github","expressions":{"branch":{"constant_value":"main"},"commit_message":{"constant_value":"chore: add stale workflow"},"content":{"references":["path.module"]},"file":{"constant_value":".github/stale.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.enable_weekly_reporting"]}},{"address":"github_repository_file.traceability","mode":"managed","type":"github_repository_file","name":"traceability","provider_config_key":"github","expressions":{"branch":{"constant_value":"main"},"commit_message":{"constant_value":"chore: add traceability enforcement workflow"},"content":{"references":["path.module"]},"file":{"constant_value":".github/workflows/traceability.yml"},"overwrite_on_create":{"constant_value":true},"repository":{"references":["github_repository.this.name","github_repository.this"]}},"schema_version":0,"count_expression":{"references":["var.traceability_enabled"]}},{"address":"null_resource.files_created","mode":"managed","type":"null_resource","name":"files_created","provider_config_key":"null","schema_version":0,"depends_on":["github_repository_file.auto_approve_dependabot","github_repository_file.codeql_workflow","github_repository_file.dependabot","github_repository_file.ci_enforcement_workflow","github_repository_file.stale","github_repository_file.scorecard","github_repository_file.traceability","github_repository_file.build","github_repository_file.release","github_repository_file.editorconfig","github_repository_file.nvmrc","github_repository_file.gitignore","github_repository_file.contributing","github_repository_file.pull_request_template","github_repository_file.issue_template_bug","github_repository_file.issue_template_feature","github_repository_file.codeowners","github_repository_file.license","github_repository_file.readme","github_repository_file.security","github_repository_file.changelog","github_repository_file.release_config"]}],"variables":{"allow_auto_merge":{"default":true,"description":"Allow auto-merge for pull requests (including Dependabot)."},"bootstrap_with_templates":{"default":true,"description":"If true, initialize the repo with standard files like README.md, LICENSE, SECURITY.md."},"branch":{"default":"main","description":"The branch to commit files to."},"coverage_threshold":{"default":80,"description":"Minimum coverage threshold to enforce (as percentage)"},"disable_actions_until_provisioning":{"default":true,"description":"Disable GitHub Actions workflows until provisioning is complete to avoid failure notifications and excess emails. Default: true. Set to false to enable Actions after provisioning."},"enable_auto_labeling":{"default":false,"description":"If true, automatically labels PRs and issues based on file paths or content."},"enable_ci":{"default":true,"description":"If true, adds build/test workflow for CI validation."},"enable_codeql":{"default":true,"description":"Enable CodeQL analysis workflow."},"enable_coverage":{"default":false,"description":"Enable test coverage reporting"},"enable_dependabot":{"default":true,"description":"Enable Dependabot configuration and workflows."},"enable_dependabot_alerts":{"default":true,"description":"Enable Dependabot alerts for the repository via workflow."},"enable_dependabot_autoapprove":{"default":true,"description":"Enable workflow to auto-approve and auto-merge Dependabot PRs."},"enable_dependabot_automerge_minor":{"default":true,"description":"Enable Dependabot auto-merge for minor upgrades."},"enable_dependabot_security_updates":{"default":true,"description":"Enable Dependabot security updates for the repository via workflow."},"enable_matrix":{"default":false,"description":"If true, use a version matrix for test workflows"},"enable_release":{"default":true,"description":"If true, adds semantic-release GitHub workflow."},"enable_secret_scanning":{"default":true,"description":"Enable secret scanning for the repository via workflow."},"enable_secret_scanning_push_protection":{"default":true,"description":"Enable secret scanning push protection for the repository via workflow."},"enable_weekly_reporting":{"default":false,"description":"If true, adds stale issue management and OpenSSF Scorecard workflows."},"enforce_branch_naming":{"default":false,"description":"If true, enables branch naming convention enforcement (e.g. feature/*)"},"enforce_docs":{"default":false,"description":"If true, enforce documentation updates in PRs."},"enforce_gitflow":{"default":true,"description":"Whether to enforce GitFlow naming and branch protection rules."},"enforce_issue_integration":{"default":false,"description":"If true, enforce that PRs are linked to issues."},"enforce_project_board":{"default":false,"description":"If true, link issues and PRs to a GitHub project board."},"enforce_security":{"default":false,"description":"Enable security tools such as CodeQL scanning and Dependabot alerts."},"enforce_semantic_pr_title":{"default":false,"description":"If true, enforces semantic PR titles via GitHub Actions"},"enforce_tests":{"default":false,"description":"If true, enforce test updates in PRs."},"github_project_url":{"default":"","description":"The full URL of the GitHub project to attach issues/PRs to."},"language_default_versions":{"default":{"go":"1.21","javascript":"20","python":"3.11","typescript":"20"},"description":"Map of default single-version values for each language"},"language_matrix_versions":{"default":{"go":["1.20","1.21","1.22"],"javascript":["16","18","20"],"python":["3.9","3.10","3.11"],"typescript":["4.5","4.6","4.7"]},"description":"Map of version lists for matrix testing per language"},"languages":{"default":[],"description":"List of languages for CodeQL analysis and templates."},"license":{"default":"MIT","description":"The open source license to apply (MIT, Apache-2.0, GPL-3.0, BSD-3-Clause, MPL-2.0)."},"name":{"description":"The name of the GitHub repository to create."},"owners":{"description":"List of GitHub users or teams who should be set as CODEOWNERS."},"release_branches":{"default":["main"],"description":"List of branch patterns to apply branch protection rules (e.g. [\"main\", \"release/*\"])."},"require_codeql_workflow":{"default":true,"description":"Require that the CodeQL workflow exists in the repository."},"security_contact":{"default":"security@your-org.com","description":"Email or contact address to report security issues."},"status_check_contexts":{"default":[],"description":"List of status check contexts required for branch protection."},"traceability_enabled":{"default":false,"description":"Enable traceability enforcement such as issue states, assignments, or labels."},"visibility":{"default":"private","description":"Whether the repository should be 'private' or 'public'."}}}},"relevant_attributes":[{"resource":"github_repository.this","attribute":["full_name"]},{"resource":"github_repository_file.auto_approve_dependabot","attribute":[]},{"resource":"github_repository_file.ci_enforcement_workflow","attribute":[]},{"resource":"github_repository_file.codeql_workflow","attribute":[]},{"resource":"github_repository_file.build","attribute":[]},{"resource":"github_repository_file.scorecard","attribute":[]},{"resource":"github_repository.this","attribute":["name"]},{"resource":"github_repository_file.release","attribute":[]},{"resource":"github_repository_file.dependabot","attribute":[]},{"resource":"github_repository_file.stale","attribute":[]},{"resource":"github_repository_file.traceability","attribute":[]}],"checks":[{"address":{"kind":"var","name":"license","to_display":"var.license"},"status":"pass","instances":[{"address":{"to_display":"var.license"},"status":"pass"}]},{"address":{"kind":"var","name":"owners","to_display":"var.owners"},"status":"pass","instances":[{"address":{"to_display":"var.owners"},"status":"pass"}]},{"address":{"kind":"var","name":"visibility","to_display":"var.visibility"},"status":"pass","instances":[{"address":{"to_display":"var.visibility"},"status":"pass"}]}],"timestamp":"2025-06-13T11:58:16Z","applyable":true,"complete":true,"errored":false}
