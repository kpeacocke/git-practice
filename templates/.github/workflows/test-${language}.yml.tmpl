name: Test & Coverage (${language})

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    name: Test and Coverage - ${language}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Language-specific setup
%{ if language == "python" }
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install pytest pytest-cov

      - name: Run tests with coverage
        run: pytest --cov=. --cov-report=term --cov-report=xml

      - name: Rename coverage file
        run: mv coverage.xml coverage-${language}.xml
%{ elseif language == "javascript" || language == "typescript" }
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test -- --coverage

      - name: Rename coverage file
        run: mv coverage/coverage-final.json coverage-${language}.json
%{ elseif language == "go" }
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run tests
        run: go test -coverprofile=coverage.out ./...

      - name: Convert to lcov format
        run: go tool cover -func=coverage.out > coverage-${language}.txt
%{ endif }

      # Upload badge (assumes GitHub Pages to /wiki)
      - name: Generate coverage badge
        uses: tj-actions/coverage-badge@v2
        with:
          output: coverage-${language}-badge.svg
          coverage-file: |
%{ if language == "python" }
            coverage-${language}.xml
%{ elseif language == "go" }
            coverage-${language}.txt
%{ elseif language == "javascript" || language == "typescript" }
            coverage-${language}.json
%{ endif %}

      - name: Upload badge to wiki
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: wiki
          destination_dir: coverage
          keep_files: true

      # PR comment (example using Jest-style)
      - name: Comment PR with coverage summary
        uses: MishaKav/jest-coverage-comment@v1
        with:
          coverage-summary-path: coverage-${language}.json
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${language} Coverage Summary"
        if: github.event_name == 'pull_request'